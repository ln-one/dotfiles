#!/bin/bash
# zsh-nvm 插件安装脚本
# 为 Oh My Zsh 安装 zsh-nvm 插件以实现 NVM 的 lazy loading
# Requirements: 8.4

{{- if and .features.enable_oh_my_zsh .features.enable_node }}

set -euo pipefail

# 颜色定义
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly NC='\033[0m' # No Color

# 日志函数
log_info() { echo -e "${BLUE}[INFO]${NC} $1"; }
log_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
log_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
log_error() { echo -e "${RED}[ERROR]${NC} $1"; }
log_step() { echo -e "\n${BLUE}==>${NC} $1"; }

# 主函数
main() {
    log_step "安装 zsh-nvm 插件..."
    
    local plugin_dir="$HOME/.oh-my-zsh/custom/plugins/zsh-nvm"
    
    # 检查 Oh My Zsh 是否已安装
    if [[ ! -d "$HOME/.oh-my-zsh" ]]; then
        log_error "Oh My Zsh 未安装，无法安装 zsh-nvm 插件"
        exit 1
    fi
    
    # 检查插件是否已存在
    if [[ -d "$plugin_dir" ]]; then
        log_info "zsh-nvm 插件已存在，检查更新..."
        cd "$plugin_dir"
        if git pull --quiet; then
            log_success "✅ zsh-nvm 插件已更新"
        else
            log_warning "⚠️  zsh-nvm 插件更新失败，但插件已存在"
        fi
        return 0
    fi
    
    # 创建插件目录
    mkdir -p "$(dirname "$plugin_dir")"
    
    # 克隆 zsh-nvm 插件
    log_info "正在下载 zsh-nvm 插件..."
    if git clone --quiet https://github.com/lukechilds/zsh-nvm "$plugin_dir"; then
        log_success "✅ zsh-nvm 插件安装成功"
        log_info "插件位置: $plugin_dir"
        log_info "Lazy loading 已通过 NVM_LAZY_LOAD=true 启用"
    else
        log_error "❌ zsh-nvm 插件安装失败"
        exit 1
    fi
}

# 执行主函数
main "$@"

{{- else }}
echo "跳过 zsh-nvm 插件安装 (Oh My Zsh 或 Node.js 功能未启用)"
{{- end }}